# 0 0 1 1 2 2 2 2 2 1 1 1 1 2 2 0 0 0 0
# 1이 5개 연속으로 있는지 판단

# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 1 1 1 1 1 2 2 1 0 0 0 0 0 0 0 0 0 0
# 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
# 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

# 1. 가로 세로 대각선(2방향) 정확히 5개 연속으로 1 혹은 2가 나열된 것 탐지
# 2. 답 출력하기 - 시작 돌의 위치

import sys

D = [(0, 1), (1, 0), (1, 1), (-1, 1)]  # 중요
N = 19
M = []
for _ in range(N):
  M.append(list(map(int, sys.stdin.readline().split())))

def valid(r, c):
  return r >= 0 and r < N and c >= 0 and c < N

def sol():
  for dr, dc in D:
    for r in range(N):
      for c in range(N):
        v = M[r][c]
        if v == 0:
          continue
        pr = r - dr
        pc = c - dc
        if valid(pr, pc) and M[pr][pc] == v: # 직전 위치의 돌이 같으면 스킵 (중요)
          continue

        nr = r
        nc = c
        cnt = 0
        while valid(nr, nc) and M[nr][nc] == v:
          nr += dr
          nc += dc
          cnt += 1
        if cnt == 5:
          print(v)
          print(r+1, c+1)
          return
  print(0)

sol()
